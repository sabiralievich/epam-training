package heroes.creatures;import com.google.gson.Gson;import java.io.FileNotFoundException;import java.io.FileReader;import java.util.Random;public class CreatureGenerator {    private static Gson gson = new Gson();    public static Creature createCreature(String castleType){        Creature creature = null;        switch (castleType) {            case "Dungeon" -> creature = createCreaturesForDungeon();            case "Necropolis" -> creature = createCreatureForNecropolis();            default -> throw new IllegalStateException("Unexpected value: " + castleType);        }    return creature;    }    private static Creature createCreatureForNecropolis() {        // to implement logic here        return null;    }    private static Creature createCreaturesForDungeon() {        Random rnd;        rnd = new Random();        Creature creature;        int i = rnd.nextInt(2);        switch (i) {            case 0 -> creature = (Minotaur)CreatureGenerator.createMinotaur();            case 1 -> creature = (Troglodyte)CreatureGenerator.createTroglodyte();            default -> throw new IllegalStateException("Unexpected value: " + i);        }        return creature;    }    private static Creature createMinotaur() {        Minotaur minotaur = null;        try {            minotaur = gson.fromJson(new FileReader("src/main/resources/minotaur.json"), Minotaur.class);        } catch (FileNotFoundException e) {            e.printStackTrace();        }        return minotaur;    }    private static Creature createTroglodyte() {        Troglodyte troglodyte = null;        try {            troglodyte = gson.fromJson(new FileReader("src/main/resources/troglodyte.json"), Troglodyte.class);        } catch (FileNotFoundException e) {            e.printStackTrace();        }        return troglodyte;    }}